import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.atomic.AtomicInteger;

public class TimeBased {

    private final static AtomicInteger count = new AtomicInteger(0);

    static long start = System.currentTimeMillis();

    public static void main(String args[]) {
        ExecutorService executor = Executors.newFixedThreadPool(100);

        for (int i = 0; i < 1000000000; i++) {
            if ((System.currentTimeMillis() - start) >= 0)
                System.exit(0);
            Runnable worker = new MultithreadingDemo(); // have a AtomicInteger int to increment the value

            executor.execute(worker);
        }
        executor.shutdown();
        // Wait until all threads are finish
        while (!executor.isTerminated()) {

        }
    }
}
